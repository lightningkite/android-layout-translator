---

#View
- id: View
  type: element
  parent: null
  template: |
    <view clipsSubviews="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" >
    </view>

#Space
- id: Space
  type: element
  template: |
    <view clipsSubviews="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" >
    </view>




# ProgressBar

- id: ProgressBar
  type: element
  autoWrapFor:
    - 'android:padding'
    - 'android:paddingStart'
    - 'android:paddingEnd'
    - 'android:paddingLeft'
    - 'android:paddingRight'
    - 'android:paddingTop'
    - 'android:paddingBottom'
    - 'android:background'
  template: |
    <activityIndicatorView opaque="NO" contentMode="scaleToFill" style="medium" translatesAutoresizingMaskIntoConstraints="NO" animating="YES" >
    </activityIndicatorView>

- id: style
  type: attribute
  element: ProgressBar
  equalTo: "?android:attr/progressBarStyleLarge"
  rules:
    "":
      attribute:
        style: "large"

- id: "android:indeterminateTint"
  type: attribute
  element: ProgressBar
  valueType: Color
  xib:
    color: SubNode

- id: ProgressBar
  type: element
  autoWrapFor:
    - 'android:padding'
    - 'android:paddingStart'
    - 'android:paddingEnd'
    - 'android:paddingLeft'
    - 'android:paddingRight'
    - 'android:paddingTop'
    - 'android:paddingBottom'
    - 'android:background'
  attributes:
    style: ?android:attr/progressBarStyleHorizontal
  template: |
    <progressView opaque="NO" contentMode="scaleToFill" progress="0.5" translatesAutoresizingMaskIntoConstraints="NO" >
    </progressView>

- id: "android:progressTint"
  type: attribute
  element: ProgressBar
  valueType: Color
  xib:
    progressTintColor: SubNode

- id: "android:progressBackgroundTint"
  type: attribute
  element: ProgressBar
  valueType: Color
  xib:
    trackTintColor: SubNode





#ImageView
- id: ImageView
  type: element
  autoWrapFor:
    - 'android:padding'
    - 'android:paddingStart'
    - 'android:paddingEnd'
    - 'android:paddingLeft'
    - 'android:paddingRight'
    - 'android:paddingTop'
    - 'android:paddingBottom'
    - 'android:background'
  template: |
    <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" translatesAutoresizingMaskIntoConstraints="NO" >
    </imageView>

- id: "android:src"
  type: attribute
  element: ImageView
  valueType: Bitmap
  xib:
    image: attribute

- id: "android:src"
  type: attribute
  element: ImageView
  valueType: Vector
  xib:
    image: attribute

- id: "android:scaleType"
  type: attribute
  element: ImageView
  valueType: String
  equalTo: centerInside
  rules:
    "":
      attribute:
        "contentMode": scaleAspectFit

- id: "android:scaleType"
  type: attribute
  element: ImageView
  valueType: String
  equalTo: fitCenter
  rules:
    "":
      attribute:
        "contentMode": scaleAspectFit

- id: "android:scaleType"
  type: attribute
  element: ImageView
  valueType: String
  equalTo: centerCrop
  rules:
    "":
      attribute:
        "contentMode": scaleAspectFill




#TextView
- id: HasDirectText
  type: element
  template: ""

- id: TextView
  type: element
  parent: HasDirectText
  autoWrapFor:
    - 'android:padding'
    - 'android:paddingStart'
    - 'android:paddingEnd'
    - 'android:paddingLeft'
    - 'android:paddingRight'
    - 'android:paddingTop'
    - 'android:paddingBottom'
    - 'android:background'
    - 'android:drawableLeft'
    - 'android:drawableRight'
    - 'android:drawableStart'
    - 'android:drawableEnd'
    - 'android:drawableTop'
    - 'android:drawableBottom'
  template: |
    <label opaque="NO" userInteractionEnabled="NO" contentMode="left" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO" >
      <fontDescription key="fontDescription" type="system" pointSize="17"/>
      <nil key="highlightedColor"/>
    </label>

- id: android:text
  type: attribute
  element: HasDirectText
  rules:
    "":
      attribute:
        text: ~value~

- id: "android:letterSpacing"
  type: attribute
  element: TextView
  valueType: Dimension
  xib:
    letterSpacing: UserDefined
  rules:
    "":
      attribute:
        customClass: StyledUILabel
        customModule: XmlToXibRuntime

- id: "android:textAllCaps"
  type: attribute
  element: TextView
  valueType: String
  xib:
    textAllCaps: UserDefined
  rules:
    "":
      attribute:
        customClass: StyledUILabel
        customModule: XmlToXibRuntime

- id: "android:lineSpacingMultiplier"
  type: attribute
  element: TextView
  valueType: Number
  xib:
    lineSpacingMultiplier: UserDefined
  rules:
    "":
      attribute:
        customClass: StyledUILabel
        customModule: XmlToXibRuntime

- id: "android:textColor"
  type: attribute
  element: HasDirectText
  valueType: Color
  xib:
    textColor: subnode

- id: "android:textSize"
  type: attribute
  element: HasDirectText
  valueType: Dimension
  rules:
    "fontDescription[@key='fontDescription']":
      attribute:
        pointSize: ~number~

- id: "android:fontFamily"
  type: attribute
  element: HasDirectText
  valueType: Font
  rules:
    "fontDescription[@key='fontDescription']":
      ifContains:
        "android:textStyle=italic":
          attribute:
            name: ~italic.postScriptName~
            family: ~italic.fontSuperFamily~
            type: null
        else:
          attribute:
            name: ~normal.postScriptName~
            family: ~normal.fontSuperFamily~
            type: null

- id: "android:textStyle"
  type: attribute
  element: HasDirectText
  valueType: String
  rules:
    "fontDescription[@key='fontDescription']":
      ifContains:
        "android:fontFamily=null":
          ifContains:
            italic:
              attribute:
                type: "italicSystem"
            bold:
              attribute:
                type: "boldSystem"

- id: "android:maxLines"
  type: attribute
  element: TextView
  valueType: Number
  xib:
    numberOfLines: attribute

- id: "android:gravity"
  type: attribute
  element: TextView
  valueType: String
  rules:
    "":
      ifContains:
        start:
          attribute:
            textAlignment: left
        left:
          attribute:
            textAlignment: left
        center:
          attribute:
            textAlignment: center
        center_horizontal:
          attribute:
            textAlignment: center
        right:
          attribute:
            textAlignment: right
        end:
          attribute:
            textAlignment: right





#Button
- id: Button
  type: element
  autoWrapFor:
    - 'android:drawableLeft'
    - 'android:drawableRight'
    - 'android:drawableStart'
    - 'android:drawableEnd'
    - 'android:drawableTop'
    - 'android:drawableBottom'
  wrappedAttributes:
    - 'android:padding'
    - 'android:paddingLeft'
    - 'android:paddingRight'
    - 'android:paddingStart'
    - 'android:paddingEnd'
    - 'android:paddingTop'
    - 'android:paddingBottom'
    - 'android:paddingHorizontal'
    - 'android:paddingVertical'
    - 'android:background'

  template: |
    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="wordWrap" translatesAutoresizingMaskIntoConstraints="NO" >
      <fontDescription key="fontDescription" type="system" pointSize="17"/>
    </button>

- id: "android:padding"
  type: attribute
  element: Button
  valueType: Dimension
  rules:
    "inset[@key='contentEdgeInsets']":
      attribute:
        minY: ~integer~
        minX: ~integer~
        maxY: ~integer~
        maxX: ~integer~

- id: "android:paddingLeft"
  type: attribute
  element: Button
  valueType: Dimension
  rules:
    "inset[@key='contentEdgeInsets']":
      attribute:
        minX: ~integer~
- id: "android:paddingTop"
  type: attribute
  element: Button
  valueType: Dimension
  rules:
    "inset[@key='contentEdgeInsets']":
      attribute:
        minY: ~integer~
- id: "android:paddingRight"
  type: attribute
  element: Button
  valueType: Dimension
  rules:
    "inset[@key='contentEdgeInsets']":
      attribute:
        maxX: ~integer~
- id: "android:paddingBottom"
  type: attribute
  element: Button
  valueType: Dimension
  rules:
    "inset[@key='contentEdgeInsets']":
      attribute:
        maxY: ~integer~

- id: "android:letterSpacing"
  type: attribute
  element: Button
  valueType: Dimension
  xib:
    letterSpacing: UserDefined
  rules:
    "":
      attribute:
        customClass: StyledUIButton
        customModule: XmlToXibRuntime

- id: "android:textAllCaps"
  type: attribute
  element: Button
  valueType: String
  xib:
    textAllCaps: UserDefined
  rules:
    "":
      attribute:
        customClass: StyledUIButton
        customModule: XmlToXibRuntime

- id: "android:lineSpacingMultiplier"
  type: attribute
  element: Button
  valueType: Number
  xib:
    lineSpacingMultiplier: UserDefined
  rules:
    "":
      attribute:
        customClass: StyledUIButton
        customModule: XmlToXibRuntime

- id: "android:letterSpacing"
  type: attribute
  element: ToggleButton
  valueType: Dimension
  xib:
    letterSpacing: UserDefined

- id: "android:textAllCaps"
  type: attribute
  element: ToggleButton
  valueType: String
  xib:
    textAllCaps: UserDefined

- id: "android:lineSpacingMultiplier"
  type: attribute
  element: ToggleButton
  valueType: Number
  xib:
    lineSpacingMultiplier: UserDefined

- id: android:text
  type: attribute
  element: Button
  rules:
    "state[@key='normal']":
      attribute:
        title: ~value~

- id: android:textOn
  type: attribute
  element: ToggleButton
  rules:
    "state[@key='selected']":
      attribute:
        title: ~value~

- id: android:textOff
  type: attribute
  element: ToggleButton
  rules:
    "state[@key='normal']":
      attribute:
        title: ~value~

- id: "android:textColor"
  type: attribute
  element: Button
  valueType: Color
  xib:
    titleColor: StateSubnode

- id: "android:textSize"
  type: attribute
  element: Button
  valueType: Dimension
  rules:
    "fontDescription[@key='fontDescription']":
      attribute:
        pointSize: ~number~

- id: "android:fontFamily"
  type: attribute
  element: Button
  valueType: Font
  rules:
    "fontDescription[@key='fontDescription']":
      ifContains:
        "android:textStyle=italic":
          attribute:
            name: ~italic.postScriptName~
            family: ~italic.fontSuperFamily~
            type: null
        else:
          attribute:
            name: ~normal.postScriptName~
            family: ~normal.fontSuperFamily~
            type: null

- id: "android:textStyle"
  type: attribute
  element: Button
  valueType: String
  rules:
    "fontDescription[@key='fontDescription']":
      ifContains:
        "android:fontFamily=null":
          ifContains:
            italic:
              attribute:
                type: "italicSystem"
            bold:
              attribute:
                type: "boldSystem"

- id: "android:gravity"
  type: attribute
  element: Button
  valueType: String
  rules:
    "":
      ifContains:
        start:
          attribute:
            contentHorizontalAlignment: left
        left:
          attribute:
            contentHorizontalAlignment: left
        center:
          attribute:
            contentHorizontalAlignment: center
            contentVerticalAlignment: center
        center_horizontal:
          attribute:
            contentHorizontalAlignment: center
        center_vertical:
          attribute:
            contentHorizontalAlignment: leading
        right:
          attribute:
            contentHorizontalAlignment: right
        end:
          attribute:
            contentHorizontalAlignment: right
        top:
          attribute:
            contentVerticalAlignment: top
        bottom:
          attribute:
            contentVerticalAlignment: bottom






#ImageButton
- id: ImageButton
  type: element
  template: |
    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="wordWrap" translatesAutoresizingMaskIntoConstraints="NO" >
      <userDefinedRuntimeAttributes userDefinedRuntimeAttributes="userDefinedRuntimeAttributes">
        <userDefinedRuntimeAttribute keyPath="imageView.contentMode" type="number">
          <integer key="value" value="4"/>
        </userDefinedRuntimeAttribute>
      </userDefinedRuntimeAttributes>
    </button>

- id: "android:padding"
  type: attribute
  element: ImageButton
  valueType: Dimension
  rules:
    "inset[@key='contentEdgeInsets']":
      attribute:
        minY: ~integer~
        minX: ~integer~
        maxY: ~integer~
        maxX: ~integer~

- id: "android:paddingLeft"
  type: attribute
  element: ImageButton
  valueType: Dimension
  rules:
    "inset[@key='contentEdgeInsets']":
      attribute:
        minX: ~integer~
- id: "android:paddingTop"
  type: attribute
  element: ImageButton
  valueType: Dimension
  rules:
    "inset[@key='contentEdgeInsets']":
      attribute:
        minY: ~integer~
- id: "android:paddingRight"
  type: attribute
  element: ImageButton
  valueType: Dimension
  rules:
    "inset[@key='contentEdgeInsets']":
      attribute:
        maxX: ~integer~
- id: "android:paddingBottom"
  type: attribute
  element: ImageButton
  valueType: Dimension
  rules:
    "inset[@key='contentEdgeInsets']":
      attribute:
        maxY: ~integer~

- id: "android:gravity"
  type: attribute
  element: ImageButton
  valueType: String
  rules:
    "":
      ifContains:
        start:
          attribute:
            contentHorizontalAlignment: left
        left:
          attribute:
            contentHorizontalAlignment: left
        center:
          attribute:
            contentHorizontalAlignment: center
            contentVerticalAlignment: center
        center_horizontal:
          attribute:
            contentHorizontalAlignment: center
        right:
          attribute:
            contentHorizontalAlignment: right
        end:
          attribute:
            contentHorizontalAlignment: right
        top:
          attribute:
            contentVerticalAlignment: top
        bottom:
          attribute:
            contentVerticalAlignment: bottom

- id: "android:src"
  type: attribute
  element: ImageButton
  valueType: Bitmap
  xib:
    image: StateAttribute

- id: "android:src"
  type: attribute
  element: ImageButton
  valueType: Vector
  xib:
    image: StateAttribute

- id: "android:src"
  type: attribute
  element: ImageButton
  valueType: DrawableState
  xib:
    image: StateAttribute

- id: "android:scaleType"
  type: attribute
  element: ImageButton
  valueType: String
  equalTo: centerInside
  rules:
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='imageView.contentMode' and @type='number']/integer[@key='value']":
      attribute:
        "value": '4'

- id: "android:scaleType"
  type: attribute
  element: ImageButton
  valueType: String
  equalTo: fitCenter
  rules:
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='imageView.contentMode' and @type='number']/integer[@key='value']":
      attribute:
        "value": '1'

- id: "android:scaleType"
  type: attribute
  element: ImageButton
  valueType: String
  equalTo: centerCrop
  rules:
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='imageView.contentMode' and @type='number']/integer[@key='value']":
      attribute:
        "value": '2'






#ToggleButton
- id: ToggleButton
  type: element
  parent: Button
  template: |
    <button opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" lineBreakMode="wordWrap" translatesAutoresizingMaskIntoConstraints="NO" customClass="ToggleButton" customModule="XmlToXibRuntime">
      <fontDescription key="fontDescription" type="system" pointSize="17"/>
    </button>

#Spinner
- id: Spinner
  type: element
  parent: Button



#SeekBar
- id: SeekBar
  type: element
  template: |
    <slider opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="center" contentVerticalAlignment="center" value="0.5" minValue="0.0" maxValue="1" translatesAutoresizingMaskIntoConstraints="NO" >
    </slider>

- id: "android:progress"
  type: attribute
  element: SeekBar
  valueType: Number
  xib:
    value: attribute

- id: "android:min"
  type: attribute
  element: SeekBar
  valueType: Number
  xib:
    minValue: attribute

- id: "android:max"
  type: attribute
  element: SeekBar
  valueType: Number
  xib:
    maxValue: attribute

- id: "android:thumbTint"
  type: attribute
  element: SeekBar
  valueType: Color
  xib:
    thumbTintColor: SubNode

- id: "android:progressTint"
  type: attribute
  element: SeekBar
  valueType: Color
  xib:
    minimumTrackTintColor: SubNode

- id: "android:progressBackgroundTint"
  type: attribute
  element: SeekBar
  valueType: Color
  xib:
    maximumTrackTintColor: SubNode



#RatingBar
- id: RatingBar
  type: element
  autoWrapFor:
    - 'android:padding'
    - 'android:paddingStart'
    - 'android:paddingEnd'
    - 'android:paddingLeft'
    - 'android:paddingRight'
    - 'android:paddingTop'
    - 'android:paddingBottom'
    - 'android:background'
  template: |
    <view opaque="NO" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" placeholderIntrinsicWidth="75" placeholderIntrinsicHeight="30" customClass="CosmosView" customModule="Cosmos">
    </view>

- id: "android:progressTint"
  type: attribute
  element: RatingBar
  valueType: Color
  xib:
    filledColor: UserDefined

- id: "android:progressBackgroundTint"
  type: attribute
  element: RatingBar
  valueType: Color
  xib:
    emptyColor: UserDefined

- id: "android:numStars"
  type: attribute
  element: RatingBar
  valueType: Number
  xib:
    totalStars: UserDefined

- id: "android:rating"
  type: attribute
  element: RatingBar
  valueType: Number
  xib:
    rating: UserDefined

- id: "android:stepSize"
  type: attribute
  element: RatingBar
  valueType: Number
  equalTo: "1"
  rules:
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='fillMode' and @type='number']/integer[@key='value']":
      attribute:
        value: "0"

- id: "android:stepSize"
  type: attribute
  element: RatingBar
  valueType: Number
  equalTo: "0.5"
  rules:
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='fillMode' and @type='number']/integer[@key='value']":
      attribute:
        value: "1"

- id: "android:stepSize"
  type: attribute
  element: RatingBar
  valueType: Number
  rules:
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='fillMode' and @type='number']/integer[@key='value']":
      attribute:
        value: "2"

- id: style
  type: attribute
  element: RatingBar
  equalTo: "?android:attr/ratingBarStyleIndicator"
  rules:
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='starSize' and @type='number']/real[@key='value']":
      attribute:
        value: "32"
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='updateOnTouch' and @type='boolean']":
      attribute:
        value: "NO"

- id: style
  type: attribute
  element: RatingBar
  equalTo: "?android:attr/ratingBarStyleSmall"
  rules:
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='starSize' and @type='number']/real[@key='value']":
      attribute:
        value: "20"
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='updateOnTouch' and @type='boolean']":
      attribute:
        value: "NO"

- id: style
  type: attribute
  element: RatingBar
  equalTo: "?android:attr/ratingBarStyle"
  rules:
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='starSize' and @type='number']/real[@key='value']":
      attribute:
        value: "42"




- id: LabeledToggle
  type: element
  autoWrapFor:
    - "android:background"
  template: |
    <stackView opaque="NO" contentMode="scaleToFill" alignment="center" spacing="16" translatesAutoresizingMaskIntoConstraints="NO" customClass="LabeledToggle" customModule="XmlToXibRuntime">
        <subviews>
            <switch opaque="NO" contentMode="scaleToFill" verticalCompressionResistancePriority="999" horizontalCompressionResistancePriority="999" horizontalHuggingPriority="750" verticalHuggingPriority="750" contentHorizontalAlignment="center" contentVerticalAlignment="center" on="YES" translatesAutoresizingMaskIntoConstraints="NO">
            </switch>
            <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO">
                <fontDescription key="fontDescription" type="system" pointSize="17"/>
                <nil key="highlightedColor"/>
            </label>
        </subviews>
        <edgeInsets key="layoutMargins" top="16" left="16" bottom="16" right="16"/>
    </stackView>

- id: UnlabeledToggle
  type: element
  autoWrapFor:
    - "android:background"
    - 'android:padding'
    - 'android:paddingStart'
    - 'android:paddingEnd'
    - 'android:paddingLeft'
    - 'android:paddingRight'
    - 'android:paddingTop'
    - 'android:paddingBottom'
    - 'android:drawableLeft'
    - 'android:drawableRight'
    - 'android:drawableStart'
    - 'android:drawableEnd'
    - 'android:drawableTop'
    - 'android:drawableBottom'
  template: |
    <switch opaque="NO" contentMode="scaleToFill" verticalCompressionResistancePriority="999" horizontalCompressionResistancePriority="999" horizontalHuggingPriority="750" verticalHuggingPriority="750" contentHorizontalAlignment="center" contentVerticalAlignment="center" on="YES" translatesAutoresizingMaskIntoConstraints="NO">
    </switch>

- id: "android:padding"
  type: attribute
  element: LabeledToggle
  valueType: Dimension
  rules:
    "edgeInsets[@key='layoutMargins']":
      attribute:
        top: ~integer~
        left: ~integer~
        right: ~integer~
        bottom: ~integer~

- id: "android:paddingLeft"
  type: attribute
  element: LabeledToggle
  valueType: Dimension
  rules:
    "edgeInsets[@key='layoutMargins']":
      attribute:
        left: ~integer~
- id: "android:paddingTop"
  type: attribute
  element: LabeledToggle
  valueType: Dimension
  rules:
    "edgeInsets[@key='layoutMargins']":
      attribute:
        top: ~integer~
- id: "android:paddingRight"
  type: attribute
  element: LabeledToggle
  valueType: Dimension
  rules:
    "edgeInsets[@key='layoutMargins']":
      attribute:
        right: ~integer~
- id: "android:paddingBottom"
  type: attribute
  element: LabeledToggle
  valueType: Dimension
  rules:
    "edgeInsets[@key='layoutMargins']":
      attribute:
        bottom: ~integer~

- id: "android:letterSpacing"
  type: attribute
  element: LabeledToggle
  valueType: Dimension
  xib:
    subviews/label|letterSpacing: UserDefined
  rules:
    "subviews/label":
      attribute:
        customClass: StyledUILabel
        customModule: XmlToXibRuntime

- id: "android:textAllCaps"
  type: attribute
  element: LabeledToggle
  valueType: String
  xib:
    subviews/label|textAllCaps: UserDefined
  rules:
    "subviews/label":
      attribute:
        customClass: StyledUILabel
        customModule: XmlToXibRuntime

- id: "android:lineSpacingMultiplier"
  type: attribute
  element: LabeledToggle
  valueType: Number
  xib:
    subviews/label|lineSpacingMultiplier: UserDefined
  rules:
    "subviews/label":
      attribute:
        customClass: StyledUILabel
        customModule: XmlToXibRuntime

- id: android:text
  type: attribute
  element: LabeledToggle
  rules:
    "subviews/label":
      attribute:
        text: ~value~

- id: "android:textColor"
  type: attribute
  element: LabeledToggle
  valueType: Color
  xib:
    subviews/label|textColor: Subnode

- id: "android:textSize"
  type: attribute
  element: LabeledToggle
  valueType: Dimension
  rules:
    "subviews/label/fontDescription[@key='fontDescription']":
      attribute:
        pointSize: ~number~

- id: "android:fontFamily"
  type: attribute
  element: LabeledToggle
  valueType: Font
  rules:
    "subviews/label/fontDescription[@key='fontDescription']":
      ifContains:
        "android:textStyle=italic":
          attribute:
            name: ~italic.postScriptName~
            family: ~italic.fontSuperFamily~
            type: null
        else:
          attribute:
            name: ~normal.postScriptName~
            family: ~normal.fontSuperFamily~
            type: null

- id: "android:textStyle"
  type: attribute
  element: LabeledToggle
  valueType: String
  rules:
    "subviews/label/fontDescription[@key='fontDescription']":
      ifContains:
        "android:fontFamily=null":
          ifContains:
            italic:
              attribute:
                type: "italicSystem"
            bold:
              attribute:
                type: "boldSystem"

#- id: "android:gravity"
#  type: attribute
#  element: LabeledToggle
#  valueType: String
#  rules:
#    "":
#      ifContains:
#        start:
#          attribute:
#            contentHorizontalAlignment: left
#        left:
#          attribute:
#            contentHorizontalAlignment: left
#        center:
#          attribute:
#            contentHorizontalAlignment: center
#            contentVerticalAlignment: center
#        center_horizontal:
#          attribute:
#            contentHorizontalAlignment: center
#        right:
#          attribute:
#            contentHorizontalAlignment: right
#        end:
#          attribute:
#            contentHorizontalAlignment: right
#        top:
#          attribute:
#            contentVerticalAlignment: top
#        bottom:
#          attribute:
#            contentVerticalAlignment: bottom

#Switch
- id: Switch
  parent: LabeledToggle
  type: element
  template: |
    <stackView opaque="NO" contentMode="scaleToFill" alignment="center" spacing="16" translatesAutoresizingMaskIntoConstraints="NO" customClass="LabeledToggle" customModule="XmlToXibRuntime">
      <subviews>
        <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="251" verticalHuggingPriority="251" text="" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO">
          <fontDescription key="fontDescription" type="system" pointSize="17"/>
          <nil key="highlightedColor"/>
        </label>
        <switch opaque="NO" contentMode="scaleToFill" verticalCompressionResistancePriority="999" horizontalCompressionResistancePriority="999" horizontalHuggingPriority="750" verticalHuggingPriority="750" contentHorizontalAlignment="center" contentVerticalAlignment="center" on="NO" translatesAutoresizingMaskIntoConstraints="NO">
        </switch>
      </subviews>
    </stackView>

- id: Switch
  caseIdentifier: UnlabeledSwitch
  attributes:
    android:text: 'unset'
  parent: UnlabeledToggle
  type: element
  template: |
    <switch opaque="NO" contentMode="scaleToFill" verticalCompressionResistancePriority="999" horizontalCompressionResistancePriority="999" horizontalHuggingPriority="750" verticalHuggingPriority="750" contentHorizontalAlignment="center" contentVerticalAlignment="center" on="NO" translatesAutoresizingMaskIntoConstraints="NO">
    </switch>

- id: M13LabeledToggle
  type: element
  parent: LabeledToggle

- id: M13UnlabeledToggle
  type: element
  parent: UnlabeledToggle

- id: "android:buttonTint"
  type: attribute
  valueType: Color
  element: M13LabeledToggle
  xib:
    subviews/view|secondaryTintColor: userDefined
    subviews/view|secondaryCheckmarkTintColor: userDefined
    subviews/view|tintColor: subnode

- id: "android:buttonTint"
  type: attribute
  valueType: ColorStateResource
  element: M13LabeledToggle
  xib:
    subviews/view|secondaryTintColor: userDefined
    subviews/view|secondaryCheckmarkTintColor: userDefined
  rules:
    "color[@key='tintColor']":
      attribute:
        red: ~selected.redFloat~
        green: ~selected.greenFloat~
        blue: ~selected.blueFloat~
        alpha: ~selected.alphaFloat~
        colorSpace: calibratedRGB

- id: "android:buttonTint"
  type: attribute
  valueType: Color
  element: M13UnlabeledToggle
  xib:
    secondaryTintColor: userDefined
    secondaryCheckmarkTintColor: userDefined
    tintColor: subnode

- id: "android:buttonTint"
  type: attribute
  valueType: ColorStateResource
  element: M13UnlabeledToggle
  xib:
    secondaryTintColor: userDefined
    secondaryCheckmarkTintColor: userDefined
  rules:
    "color[@key='tintColor']":
      attribute:
        red: ~selected.redFloat~
        green: ~selected.greenFloat~
        blue: ~selected.blueFloat~
        alpha: ~selected.alphaFloat~
        colorSpace: calibratedRGB

#CheckBox
- id: CheckBox
  parent: M13LabeledToggle
  type: element
  template: |
    <stackView opaque="NO" contentMode="scaleToFill" alignment="center" spacing="16" translatesAutoresizingMaskIntoConstraints="NO" customClass="LabeledToggle" customModule="XmlToXibRuntime">
      <subviews>
          <view contentMode="scaleToFill" verticalCompressionResistancePriority="999" horizontalCompressionResistancePriority="999" horizontalHuggingPriority="750" verticalHuggingPriority="750" translatesAutoresizingMaskIntoConstraints="NO" customClass="M13Checkbox" customModule="M13Checkbox">
            <constraints>
              <constraint firstAttribute="height" constant="20.5"/>
              <constraint firstAttribute="width" constant="20.5"/>
            </constraints>
            <userDefinedRuntimeAttributes>
              <userDefinedRuntimeAttribute type="string" keyPath="_IBMarkType" value="Checkmark"/>
              <userDefinedRuntimeAttribute type="string" keyPath="_IBBoxType" value="Square"/>
              <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
                  <real key="value" value="2"/>
              </userDefinedRuntimeAttribute>
              <userDefinedRuntimeAttribute type="string" keyPath="_IBCheckState" value="Unchecked"/>
              <userDefinedRuntimeAttribute type="number" keyPath="checkmarkLineWidth">
                  <real key="value" value="1"/>
              </userDefinedRuntimeAttribute>
              <userDefinedRuntimeAttribute type="number" keyPath="boxLineWidth">
                  <real key="value" value="1"/>
              </userDefinedRuntimeAttribute>
            </userDefinedRuntimeAttributes>
          </view>
          <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="100" verticalHuggingPriority="251" text="" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO">
            <fontDescription key="fontDescription" type="system" pointSize="17"/>
            <nil key="highlightedColor"/>
          </label>
      </subviews>
    </stackView>

- id: CheckBox
  caseIdentifier: UnlabeledCheckBox
  attributes:
    android:text: 'unset'
  parent: M13UnlabeledToggle
  type: element
  template: |
    <view contentMode="scaleToFill" verticalCompressionResistancePriority="999" horizontalCompressionResistancePriority="999" horizontalHuggingPriority="750" verticalHuggingPriority="750" translatesAutoresizingMaskIntoConstraints="NO" customClass="M13Checkbox" customModule="M13Checkbox">
      <constraints>
        <constraint firstAttribute="height" constant="20.5"/>
        <constraint firstAttribute="width" constant="20.5"/>
      </constraints>
      <userDefinedRuntimeAttributes>
        <userDefinedRuntimeAttribute type="string" keyPath="_IBMarkType" value="Checkmark"/>
        <userDefinedRuntimeAttribute type="string" keyPath="_IBBoxType" value="Square"/>
        <userDefinedRuntimeAttribute type="number" keyPath="cornerRadius">
            <real key="value" value="2"/>
        </userDefinedRuntimeAttribute>
        <userDefinedRuntimeAttribute type="string" keyPath="_IBCheckState" value="Unchecked"/>
        <userDefinedRuntimeAttribute type="number" keyPath="checkmarkLineWidth">
            <real key="value" value="1"/>
        </userDefinedRuntimeAttribute>
        <userDefinedRuntimeAttribute type="number" keyPath="boxLineWidth">
            <real key="value" value="1"/>
        </userDefinedRuntimeAttribute>
      </userDefinedRuntimeAttributes>
    </view>

#RadioButton
- id: RadioButton
  parent: M13LabeledToggle
  type: element
  template: |
    <stackView opaque="NO" contentMode="scaleToFill" alignment="center" spacing="16" translatesAutoresizingMaskIntoConstraints="NO" customClass="LabeledToggle" customModule="XmlToXibRuntime">
      <subviews>
          <view contentMode="scaleToFill" verticalCompressionResistancePriority="999" horizontalCompressionResistancePriority="999" horizontalHuggingPriority="750" verticalHuggingPriority="750" translatesAutoresizingMaskIntoConstraints="NO" customClass="M13RadioButton" customModule="XmlToXibRuntime" >
            <constraints>
              <constraint firstAttribute="height" constant="20.5"/>
              <constraint firstAttribute="width" constant="20.5"/>
            </constraints>
            <userDefinedRuntimeAttributes>
              <userDefinedRuntimeAttribute type="string" keyPath="_IBMarkType" value="Radio"/>
              <userDefinedRuntimeAttribute type="string" keyPath="_IBBoxType" value="Circle"/>
              <userDefinedRuntimeAttribute type="string" keyPath="_IBCheckState" value="Unchecked"/>
              <userDefinedRuntimeAttribute type="number" keyPath="checkmarkLineWidth">
                  <real key="value" value="1"/>
              </userDefinedRuntimeAttribute>
              <userDefinedRuntimeAttribute type="number" keyPath="boxLineWidth">
                  <real key="value" value="1"/>
              </userDefinedRuntimeAttribute>
            </userDefinedRuntimeAttributes>
          </view>
          <label opaque="NO" userInteractionEnabled="NO" contentMode="left" horizontalHuggingPriority="100" verticalHuggingPriority="251" text="" textAlignment="natural" lineBreakMode="tailTruncation" baselineAdjustment="alignBaselines" adjustsFontSizeToFit="NO" translatesAutoresizingMaskIntoConstraints="NO">
            <fontDescription key="fontDescription" type="system" pointSize="17"/>
            <nil key="highlightedColor"/>
          </label>
      </subviews>
    </stackView>

- id: RadioButton
  caseIdentifier: UnlabeledRadioButton
  attributes:
    android:text: 'unset'
  parent: M13UnlabeledToggle
  type: element
  template: |
    <view contentMode="scaleToFill" verticalCompressionResistancePriority="999" horizontalCompressionResistancePriority="999" horizontalHuggingPriority="750" verticalHuggingPriority="750" translatesAutoresizingMaskIntoConstraints="NO" customClass="M13RadioButton" customModule="XmlToXibRuntime" >
      <constraints>
        <constraint firstAttribute="height" constant="20.5"/>
        <constraint firstAttribute="width" constant="20.5"/>
      </constraints>
      <userDefinedRuntimeAttributes>
        <userDefinedRuntimeAttribute type="string" keyPath="_IBMarkType" value="Radio"/>
        <userDefinedRuntimeAttribute type="string" keyPath="_IBBoxType" value="Circle"/>
        <userDefinedRuntimeAttribute type="string" keyPath="_IBCheckState" value="Unchecked"/>
        <userDefinedRuntimeAttribute type="number" keyPath="checkmarkLineWidth">
            <real key="value" value="1"/>
        </userDefinedRuntimeAttribute>
        <userDefinedRuntimeAttribute type="number" keyPath="boxLineWidth">
            <real key="value" value="1"/>
        </userDefinedRuntimeAttribute>
      </userDefinedRuntimeAttributes>
    </view>

#RadioGroup
- id: RadioGroup
  type: element
  parent: LinearLayout






#EditText

- id: EditTextLike
  type: element
  parent: HasDirectText
  template: ""

- id: EditText
  type: element
  parent: EditTextLike
  autoWrapFor:
    - 'android:padding'
    - 'android:paddingStart'
    - 'android:paddingEnd'
    - 'android:paddingLeft'
    - 'android:paddingRight'
    - 'android:paddingTop'
    - 'android:paddingBottom'
    - 'android:background'
    - 'android:drawableLeft'
    - 'android:drawableRight'
    - 'android:drawableStart'
    - 'android:drawableEnd'
    - 'android:drawableTop'
    - 'android:drawableBottom'
  template: |
    <textField opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" placeholder="" textAlignment="natural" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" >
        <fontDescription key="fontDescription" type="system" pointSize="14"/>
        <textInputTraits key="textInputTraits"/>
    </textField>

- id: AutoCompleteTextView
  type: element
  parent: EditText
  template: |
    <textField opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" placeholder="" textAlignment="natural" minimumFontSize="17" translatesAutoresizingMaskIntoConstraints="NO" customClass="SearchTextField" customModule="SearchTextField">
        <fontDescription key="fontDescription" type="system" pointSize="14"/>
        <textInputTraits key="textInputTraits"/>
    </textField>

- id: EditText
  caseIdentifier: MultilineEditText
  parent: EditTextLike
  attributes:
    android:inputType: 'contains:textMultiLine'
  type: element
  autoWrapFor:
    - 'android:padding'
    - 'android:paddingStart'
    - 'android:paddingEnd'
    - 'android:paddingLeft'
    - 'android:paddingRight'
    - 'android:paddingTop'
    - 'android:paddingBottom'
    - 'android:background'
    - 'android:drawableLeft'
    - 'android:drawableRight'
    - 'android:drawableStart'
    - 'android:drawableEnd'
    - 'android:drawableTop'
    - 'android:drawableBottom'
  template: |
    <textView opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="center" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" >
        <fontDescription key="fontDescription" type="system" pointSize="14"/>
        <textInputTraits key="textInputTraits"/>
    </textView>

- id: com.lightningkite.butterfly.views.widget.SelectableText
  parent: MultilineEditText
  type: element

- id: "android:text"
  type: attribute
  element: EditTextLike
  valueType: String
  rules:
    "":
      attribute:
        text: ~value~

- id: "android:textColor"
  type: attribute
  element: EditTextLike
  valueType: Color
  xib:
    textColor: SubNode

- id: "android:hint"
  type: attribute
  element: EditText
  valueType: String
  rules:
    "":
      attribute:
        placeholder: ~value~

- id: "android:textColorHint"
  type: attribute
  element: EditText
  valueType: Color
  xib:
    textColorPlaceholder: UserDefined
  rules:
    "":
      attribute:
        customClass: StyledUITextField
        customModule: XmlToXibRuntime

- id: "android:imeOptions"
  type: attribute
  element: EditText
  valueType: String
  rules:
    "textInputTraits[@key='textInputTraits']":
      ifContains:
        actionGo:
          attribute:
            returnKeyType: go
        actionSearch:
          attribute:
            returnKeyType: search
        actionSend:
          attribute:
            returnKeyType: send
        actionNext:
          attribute:
            returnKeyType: next
        actionDone:
          attribute:
            returnKeyType: done

- id: "android:autofillHints"
  type: attribute
  element: EditText
  valueType: String
  rules:
    "textInputTraits[@key='textInputTraits']":
      ifContains:
        emailAddress:
          attribute:
            textContentType: email
        name:
          attribute:
            textContentType: name
        password:
          attribute:
            textContentType: password
        phone:
          attribute:
            textContentType: tel
        postalAddress:
          attribute:
            textContentType: street-address
        addressCity:
          attribute:
            textContentType: address-level1
        addressCityAndState:
          attribute:
            textContentType: address-level1+2
        addressState:
          attribute:
            textContentType: address-level2
        #        birthday:
        #        birthdayDay:
        #        birthdayMonth:
        #        birthdayYear:
        countryCode:
          attribute:
            textContentType: country-name
        countryName:
          attribute:
            textContentType: country-name
        #        creditCardExpirationDate:
        #        creditCardExpirationDay:
        #        creditCardExpirationMonth:
        #        creditCardExpirationYear:
        creditCardFamilyName:
          attribute:
            textContentType: family-name
        creditCardGivenName:
          attribute:
            textContentType: given-name
        creditCardMiddleName:
          attribute:
            textContentType: additional-name
        #        creditCardName:
        #        creditCardNumber:
        #        creditCardSecurityCode:
        #        creditCardType:
        email:
          attribute:
            textContentType: email
        familyName:
          attribute:
            textContentType: family-name
        fullStreetAddress:
          attribute:
            textContentType: street-address
        #        gender:
        givenName:
          attribute:
            textContentType: given-name
        #        impp:
        #        jobTitle:
        #        language:
        #        location:
        #        middleInitial:
        middleName:
          attribute:
            textContentType: additional-name
        namePrefix:
          attribute:
            textContentType: honorific-prefix
        nameSuffix:
          attribute:
            textContentType: honorific-suffix
        newPassword:
          attribute:
            textContentType: new-password
        newUsername:
          attribute:
            textContentType: username
        nickname:
          attribute:
            textContentType: nickname
        #        oneTimeCode:
        organizationName:
          attribute:
            textContentType: name
        #        photo:
        #        postalAddressExtended:
        #        postalAddressExtendedPostalCode:
        postalCode:
          attribute:
            textContentType: postal-code
        streetAddressLevel1:
          attribute:
            textContentType: address-level1
        streetAddressLevel2:
          attribute:
            textContentType: address-level2
        streetAddressLevel3:
          attribute:
            textContentType: address-level3
        #        streetAddressLevel4:
        streetAddressLine1:
          attribute:
            textContentType: address-line1
        streetAddressLine2:
          attribute:
            textContentType: address-line2
        #        streetAddressLine3:
        sublocality:
          attribute:
            textContentType: city
        telephoneNumber:
          attribute:
            textContentType: tel
        url:
          attribute:
            textContentType: url
        username:
          attribute:
            textContentType: username


- id: "android:inputType"
  type: attribute
  element: EditText
  valueType: String
  rules:
    "textInputTraits[@key='textInputTraits']":
      attribute:
        smartDashesType: "no"
        smartQuotesType: "no"
      ifContains:
        #        text:
        textCapCharacters:
          attribute:
            autocapitalizationType: allCharacters
        textCapWords:
          attribute:
            autocapitalizationType: words
        textCapSentences:
          attribute:
            autocapitalizationType: sentences
        textAutoCorrect:
          attribute:
            autocorrectionType: "yes"
        #        textAutoComplete:
        textNoSuggestions:
          attribute:
            spellCheckingType: "no"
        textUri:
          attribute:
            keyboardType: URL
            textContentType: url
        textEmailAddress:
          attribute:
            keyboardType: emailAddress
            textContentType: email
        #        textEmailSubject:
        #        textShortMessage:
        #        textLongMessage:
        textPersonName:
          attribute:
            textContentType: name
        textPostalAddress:
          attribute:
            textContentType: street-address
        textPassword:
          attribute:
            textContentType: password
            secureTextEntry: "YES"
        textVisiblePassword:
          attribute:
            textContentType: password
        #        textWebEditText:
        #        textFilter:
        #        textPhonetic:
        textWebEmailAddress:
          attribute:
            keyboardType: emailAddress
            textContentType: email
        textWebPassword:
          attribute:
            textContentType: password
            secureTextEntry: "YES"
        number:
          attribute:
            keyboardType: numberPad
        numberSigned:
          attribute:
            keyboardType: numbersAndPunctuation
        numberDecimal:
          attribute:
            keyboardType: decimalPad
        numberPassword:
          attribute:
            secureTextEntry: "YES"
            keyboardType: numberPad
        phone:
          attribute:
            keyboardType: phonePad
            textContentType: tel





#LinearLayout
- id: LinearLayout
  type: element
  autoWrapFor:
    - 'android:background'
  insertChildrenAt: subviews
  childRule: linear
  template: |
    <stackView opaque="NO" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" >
      <subviews>
      </subviews>
      <constraints>
      </constraints>
    </stackView>

- id: android:orientation
  type: attribute
  element: LinearLayout
  rules:
    "":
      attribute:
        axis: ~value~

#FrameLayout
- id: FrameLayout
  type: element
  insertChildrenAt: subviews
  childRule: frame
  template: |
    <view clipsSubviews="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" >
      <subviews>
      </subviews>
      <constraints>
      </constraints>
    </view>

#ViewFlipper
- id: ViewFlipper
  type: element
  childRule: frame-first-visible
  parent: FrameLayout

#ScrollView
- id: ScrollView
  type: element
  insertChildrenAt: subviews
  childRule: scroll-vertical
  template: |
    <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" >
    <subviews>
    </subviews>
    <constraints>
    </constraints>
    </scrollView>

#HorizontalScrollView
- id: HorizontalScrollView
  type: element
  insertChildrenAt: subviews
  childRule: scroll-horizontal
  template: |
    <scrollView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" >
    <subviews>
    </subviews>
    <constraints>
    </constraints>
    </scrollView>



## Attributes

- id: android:background
  type: attribute
  valueType: Color
  #  debug: true
  xib:
    backgroundColor: SubNode

- id: android:background
  type: attribute
  valueType: Drawable
  xib:
    backgroundLayerName: UserDefined

- id: android:alpha
  type: attribute
  xib:
    alpha: Attribute

- id: android:elevation
  type: attribute
  rules:
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='layer.shadowOpacity' and @type='number']/real[@key='value']":
      attribute:
        "value": '0.2'
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='layer.shadowOffset' and @type='size']/size[@key='value']":
      attribute:
        "width": '0'
        "height": '~number~'
    "userDefinedRuntimeAttributes/userDefinedRuntimeAttribute[@keyPath='layer.shadowColorIB' and @type='color']/color[@key='value']":
      attribute:
        "white": '0.5'
        "alpha": '1'
        "colorSpace": 'custom'
        "customColorSpace": 'genericGamma22GrayColorSpace'

- id: android:rotation
  type: attribute
  valueType: Number
  xib:
    "layer.transform.rotation.z": UserDefined

- id: android:visibility
  type: attribute
  rules:
    "":
      ifContains:
        invisible:
          attribute:
            alpha: "0"
            hidden: "NO"
        visible:
          attribute:
            hidden: "NO"
        gone:
          attribute:
            hidden: "YES"

- id: android:fillViewport
  type: attribute  # TODO

- id: android:showDividers
  type: attribute  # TODO

- id: android:minWidth
  type: attribute
  valueType: Dimension
  rules:
    constraints:
      append:
        - '<constraint firstAttribute="width" relation="greaterThanOrEqual" constant="~number~"/>'

- id: android:minHeight
  type: attribute
  valueType: Dimension
  rules:
    constraints:
      append:
        - '<constraint firstAttribute="height" relation="greaterThanOrEqual" constant="~number~"/>'

- id: include
  type: element
  parent: null
  template: |
    <view clipsSubviews="YES" contentMode="scaleToFill" translatesAutoresizingMaskIntoConstraints="NO" customClass="~layout.xmlClass~" customModule="~moduleName~" customModuleProvider="target" placeholderIntrinsicWidth="50" placeholderIntrinsicHeight="50">
    </view>

- id: androidx.swiperefreshlayout.widget.SwipeRefreshLayout
  type: element
  parent: FrameLayout


- id: androidx.recyclerview.widget.RecyclerView
  type: element
  template: |
    <collectionView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" dataMode="none" translatesAutoresizingMaskIntoConstraints="NO">
      <collectionViewFlowLayout key="collectionViewLayout" minimumLineSpacing="10" minimumInteritemSpacing="10">
        <size key="itemSize" width="128" height="128"/>
        <size key="headerReferenceSize" width="0.0" height="0.0"/>
        <size key="footerReferenceSize" width="0.0" height="0.0"/>
        <inset key="sectionInset" minX="0.0" minY="0.0" maxX="0.0" maxY="0.0"/>
      </collectionViewFlowLayout>
      <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
    </collectionView>

- id: androidx.viewpager2.widget.ViewPager2
  type: element
  template: |
    <collectionView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" dataMode="none" translatesAutoresizingMaskIntoConstraints="NO">
      <collectionViewFlowLayout key="collectionViewLayout" minimumLineSpacing="10" minimumInteritemSpacing="10">
        <size key="itemSize" width="128" height="128"/>
        <size key="headerReferenceSize" width="0.0" height="0.0"/>
        <size key="footerReferenceSize" width="0.0" height="0.0"/>
        <inset key="sectionInset" minX="0.0" minY="0.0" maxX="0.0" maxY="0.0"/>
      </collectionViewFlowLayout>
      <color key="backgroundColor" white="0.0" alpha="0.0" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
    </collectionView>

- id: com.google.android.material.tabs.TabLayout
  type: element
  template: |
    <segmentedControl opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="top" segmentControlStyle="plain" selectedSegmentIndex="0" translatesAutoresizingMaskIntoConstraints="NO">
        <segments>
            <segment title="Sample"/>
            <segment title="Segments"/>
            <segment title="Here"/>
        </segments>
    </segmentedControl>

- id: WebView
  type: element
  template: |
    <wkWebView opaque="NO" contentMode="scaleToFill" contentHorizontalAlignment="left" contentVerticalAlignment="top" segmentControlStyle="plain" selectedSegmentIndex="0" translatesAutoresizingMaskIntoConstraints="NO">
      <wkWebViewConfiguration key="configuration">
          <audiovisualMediaTypes key="mediaTypesRequiringUserActionForPlayback" none="YES"/>
          <wkPreferences key="preferences"/>
      </wkWebViewConfiguration>
    </wkWebView>
  
